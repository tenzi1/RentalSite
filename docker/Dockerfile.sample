# pull official base image
FROM python:3.11.4-slim-buster as builder

# set working directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
# RUN apt-get update && apt-get install -y --no-install-recommends gcc
RUN apt-get update \
    && apt-get install -y --no-install-recommends gcc \
    # dependencies for building Python packages
    && apt-get install -y build-essential \
    # psycopg2 dependencies
    && apt-get install -y libpq-dev \
    # translations dependencies
    && apt-get install -y gettext \
    #Additional dependencies
    && apt-get install -y git \
    #clean up unused files
    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \
    && rm -rf /var/lib/apt/lists/*

# install python dependencies
RUN pip install --upgrade pip
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

# Final image

# pull official base image
FROM python:3.11.4-slim-buster

# create directory for the app user
RUN mkdir -p /home/app

# ceate the app user
RUN addgroup --system app && adduser --system --group app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir ${APP_HOME}
WORKDIR ${APP_HOME}

# install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends netcat
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip 
RUN pip install --no-cache /wheels/*

# entrypoint
COPY ./compose/local/django/entrypoint /entrypoint
RUN sed -i 's/\r$//g' /entrypoint
RUN chmod +x /entrypoint

COPY ./compose/local/django/start/ /start
RUN sed -i 's/\r$//g' /start
RUN chmod +x /start

COPY ./compose/local/django/celery/worker/start /start-celeryworker 
RUN sed -i 's/\r$//g'
RUN chmod +x /start-celeryworker

COPY ./compose/local/django/celery/beat/start /start-celerybeat
RUN sed -i 's/\r$//g' /start-celerybeat
RUN chmod +x /start-celerybeat

COPY ./compose/local/django/celery/flower/start /start-flower
RUN sed -i 's/\r$//g' /start-flower
RUN chmod +x /start-flower

# copy project
COPY . ${APP_HOME}

# chown all the files to the app user
RUN chown -R app:app ${APP_HOME}

#change to the app user
USER app

# run entrypoint
ENTRYPOINT [ "/home/app/web/entrypoint" ]

# FROM python:3.10-slim

# ENV PYTHONDONTWRITEBYTECODE 1
# ENV PYTHONUNBUFFERED 1

# RUN apt-get update && \
#     apt-get install -y --no-install-recommends \
#     gcc \
#     python3-dev \
#     default-libmysqlclient-dev \
#     libmariadb-dev-compat \
#     pkg-config \
#     && \
#     rm -rf /var/lib/apt/lists/*

# RUN mkdir -p /app
# WORKDIR /app

# COPY ./requirements.txt /app/
# RUN pip install --upgrage pip
# RUN pip install --no-cache-dir -r requirements.txt

# COPY . /app/

# RUN python manage.py collectstatic --noinput

# EXPOSE 8000

# CMD ["daphne", "-b", "0.0.0.0", "-p", "8000", "core.asgi:application"]